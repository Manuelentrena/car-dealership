name: Deploy NestJS to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set lowercase owner name repository
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Packages
        run: echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build \
            --build-arg MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }} \
            --build-arg MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }} \
            --build-arg MONGO_PORT=${{ secrets.MONGO_PORT }} \
            --build-arg MONGO_HOST=${{ secrets.MONGO_HOST }} \
            --build-arg MONGO_EXPRESS_PORT=${{ secrets.MONGO_EXPRESS_PORT }} \
            --build-arg MONGO_DB=${{ secrets.MONGO_DB }} \
            --build-arg PORT=${{ secrets.PORT }} \
            -t ghcr.io/${OWNER_LC}/nestjs-app:latest \
            -f docker/dockerfile.prod.yml .

      - name: Push Docker image to GitHub Packages
        run: |
          docker push ghcr.io/${OWNER_LC}/nestjs-app:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "Logging into GitHub Packages..."
            echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "Pulling the latest image..."
            docker pull ghcr.io/${OWNER_LC}/nestjs-app:latest

            echo "Stopping and removing the old container..."
            docker compose down nestjs-app

            echo "Starting the new container..."
            docker compose up -d --force-recreate nestjs-app

            echo "Cleaning up old images..."
            docker image prune -f
