# Install dependencies only when needed
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json ./
RUN npm cache clean --force
RUN npm ci

# Build the app with cache dependencies
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

# Production image, copy all the files and run next
FROM node:20-alpine AS runner
WORKDIR /var/www/app
COPY package.json package-lock.json ./
RUN npm ci --omit=dev
COPY --from=builder /app/dist ./dist
RUN mkdir -p /var/www/app/logs

# Crear el usuario sin contrase√±a
RUN adduser --disabled-password entrenadev
RUN chown -R entrenadev:entrenadev /var/www/app
RUN chown -R entrenadev:entrenadev /var/www/app/logs
USER entrenadev

EXPOSE ${PORT}

CMD [ "node", "dist/src/main" ]